name:  Sonar Scan

on:
  workflow_dispatch:
  pull_request:
    branches: 
      - main

jobs:
  validate-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of sonarqube reporting
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Sonarqube Begin
        run: | 
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage
          dotnet sonarscanner begin /o:jayseth /k:Github-Test-Org /d:sonar.login=${{ secrets.SONAR_TOKEN }} /s:$GITHUB_WORKSPACE/SonarQube.Analysis.xml /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

      - name: Build
        run: |
          dotnet build
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          
      - name: Test with the dotnet CLI
        run: dotnet test --settings coverlet.runsettings --logger:trx
        env:
          ASPNETCORE_ENVIRONMENT: Development

      - name: Sonarqube end
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for SonarQube Issues
        run: |
          report=$(curl --location 'https://sonarcloud.io/api/qualitygates/project_status?projectKey=Github-Test-Org' \--header 'Authorization: Bearer ${{ secrets.SONAR_TOKEN }}')
        
          status=$(echo "$report" | jq -r '.projectStatus.status')

          if [ "$status" != "OK" ]; then
            echo "SonarQube analysis failed. Vulnerabilities found."
            echo "Creating JIRA Issue..."
            
            JIRA_URL="https://mysitetest16235.atlassian.net/"
            USERNAME=${{ secrets.JIRA_USERNAME }}
            API_TOKEN=${{ secrets.JIRA_TOKEN }}

            DESCRIPTION="SonarQube analysis failed! Error: $status Result: $report"
            # Create a new issue in Jira
            ISSUE_CREATE_RESPONSE=$(curl -D- -u "$USERNAME:$API_TOKEN" -X POST --data '{
                                    "fields": {
                                      "project": {
                                        "key": "KAN"
                                      },
                                      "summary": "SonarQube analysis failed!"
                                      "description": "'"$DESCRIPTION"'",
                                      "issuetype": {
                                        "name": "Bug"
                                      }
                                    }
                                  }' -H "Content-Type: application/json" --url "$JIRA_URL/rest/api/2/issue")

            echo "Created a new issue in Jira!!"
            
            exit 1
          else
            echo "SonarQube analysis passed. No vulnerabilities found."
          fi
